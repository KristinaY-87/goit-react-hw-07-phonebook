{"version":3,"sources":["component/Filter/Filter.module.css","component/Section/Section.module.css","redux/contacts-actions.js","redux/operations.js","redux/contacts-selectors.js","component/ContactList/ContactList.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contact","dispatch","post","then","data","catch","error","id","delete","get","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","connect","onDeleteContacts","operations","className","styles","title","list","map","number","item","text","btn","type","onClick","ContactForm","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","find","alert","reset","form","this","label","onChange","input","pattern","required","Component","contactsActions","currentTarget","Section","children","section","App","fetchContacts","isLoadingContacts","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c58694c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3_vUt\",\"input\":\"Filter_input__1_Du0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__8oYAC\",\"title\":\"Section_title__1dlNk\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\n// ----async-----\n// const fetchContacts = () => async dispatch => {\n//     dispatch(fetchContactsRequest());\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n//         dispatch(fetchContactsSuccess(data));\n//     } catch (error) {\n//         dispatch(fetchContactsError(error));\n//     }\n// }\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\n// export const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n// return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/operations';\nimport styles from './ContactList.module.css';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <>\n    <h2 className={styles.title}>Contacts</h2>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <span className={styles.text}>\n            {name}: {number}\n          </span>\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport operations from '../../redux/operations';\nimport { getAllContacts } from '../../redux/contacts-selectors';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n  handleChange = e => {\n    // console.log(e);\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { contacts, onSubmit } = this.props;\n    const { name, number } = this.state;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find(contact => contact.number === number)\n      ? alert(`${number} is already in contacts`)\n      : onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              className={styles.input}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label className={styles.label}>\n            Number\n            <input\n              value={this.state.number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              className={styles.input}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => {\n    return dispatch(operations.addContact(name, number));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactList from './component/ContactList';\nimport ContactForm from './component/ContactForm';\nimport Filter from './component/Filter';\nimport Section from './component/Section';\nimport operations from './redux/operations';\nimport { getLoading } from './redux/contacts-selectors';\nimport './App.css';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n          {this.props.isLoadingContacts && <h1>download...</h1>}\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import { persistStore} from 'redux-persist';\n\nimport contactsReducer from './contacts-reducer';\n\n// console.log(process.env.NODE_ENV);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__29Zf3\",\"label\":\"ContactForm_label__3BMmg\",\"input\":\"ContactForm_input__N6lfP\",\"btn\":\"ContactForm_btn__UfLZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3BmIm\",\"list\":\"ContactList_list__2YFzN\",\"item\":\"ContactList_item__NT61H\",\"text\":\"ContactList_text__n8bD0\",\"btn\":\"ContactList_btn__2s38u\"};"],"sourceRoot":""}